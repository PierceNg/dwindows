srcdir=@srcdir@
CC	=	@CC@
CCFLAGS	=	@CFLAGS@ -g -O2 -Wall -D__UNIX__ -DBUILD_DLL -DDW_RESOURCES
LFLAGS	=	@LIBS@
INSTALL =	@INSTALL@
INCPATH	=	-I.. -I. -I$(srcdir)
DESTDIR	=	./lib/
MLFLAGS	=	-L$(DESTDIR) 
TARGET	=	dw
SRCS	=	$(srcdir)/gtk/dw.c
OBJECTS	=	dw.o
SRCS2	=	$(srcdir)compat.c
OBJECTS2=	compat.o
TARGET2 =	dwcompat
VER_MAJ	=	1
VER_MIN	=	0
PREFIX	=	@prefix@

#.SUFFIXES:	.c .h

#.c.o:
#	$(CC) -c $(CCFLAGS) $(INCPATH) -o $@ $<
    

# Link flags shared objects
SYSCONF_LFLAGS_SHOBJ	= -shared

# Linking shared libraries
#   - Build the $(TARGET) library, eg. lib$(TARGET).so.0.0
#   - Place target in $(DESTDIR) - which has a trailing /
#   - Usually needs to incorporate $(VER_MAJ) and $(VER_MIN)
#
SYSCONF_LINK_SHLIB	= gcc
SYSCONF_LINK_TARGET_SHARED	= lib$(TARGET).so.$(VER_MAJ).$(VER_MIN)
SYSCONF_LINK_LIB_SHARED	=  $(SYSCONF_LINK_SHLIB) -shared -Wl,-soname,lib$(TARGET).so.$(VER_MAJ) \
				     -o $(SYSCONF_LINK_TARGET_SHARED) \
				     $(OBJECTS) $(LFLAGS); \
				 mv $(SYSCONF_LINK_TARGET_SHARED) $(DESTDIR); \
				 cd $(DESTDIR); \
				 rm -f lib$(TARGET).so lib$(TARGET).so.$(VER_MAJ); \
				 ln -s $(SYSCONF_LINK_TARGET_SHARED) lib$(TARGET).so; \
				 ln -s $(SYSCONF_LINK_TARGET_SHARED) lib$(TARGET).so.$(VER_MAJ)
                                 
SYSCONF_LINK_TARGET_SHARED2	= lib$(TARGET2).so.$(VER_MAJ).$(VER_MIN)
SYSCONF_LINK_LIB_SHARED2 =  $(SYSCONF_LINK_SHLIB) -shared -Wl,-soname,lib$(TARGET2).so.$(VER_MAJ) \
				     -o $(SYSCONF_LINK_TARGET_SHARED2) \
				     $(OBJECTS2) $(LFLAGS); \
				 mv $(SYSCONF_LINK_TARGET_SHARED2) $(DESTDIR); \
				 cd $(DESTDIR); \
				 rm -f lib$(TARGET2).so lib$(TARGET2).so.$(VER_MAJ); \
				 ln -s $(SYSCONF_LINK_TARGET_SHARED2) lib$(TARGET2).so; \
				 ln -s $(SYSCONF_LINK_TARGET_SHARED2) lib$(TARGET2).so.$(VER_MAJ)


# Linking static libraries
#   - Build the $(TARGET) library, eg. lib$(TARGET).a
#   - Place target in $(DESTDIR) - which has a trailing /
#
SYSCONF_AR		= ar cqs
SYSCONF_LINK_TARGET_STATIC = lib$(TARGET).a
SYSCONF_LINK_LIB_STATIC	= rm -f $(DESTDIR)$(SYSCONF_LINK_TARGET_STATIC) ; \
				 $(SYSCONF_AR) $(DESTDIR)$(SYSCONF_LINK_TARGET_STATIC) $(OBJECTS) 



####### Build rules

SYSCONF_LINK_TARGET = $(SYSCONF_LINK_TARGET_SHARED)
SYSCONF_LINK_LIB = $(SYSCONF_LINK_LIB_SHARED)

SYSCONF_LINK_TARGET2 = $(SYSCONF_LINK_TARGET_SHARED2)
SYSCONF_LINK_LIB2 = $(SYSCONF_LINK_LIB_SHARED2)

all: $(SYSCONF_LINK_TARGET) $(SYSCONF_LINK_TARGET2) dwtest

install:
		$(INSTALL) $(srcdir)/dw.h $(PREFIX)/include; \
		$(INSTALL) $(srcdir)/compat.h $(PREFIX)/include; \
		$(INSTALL) dw-config $(PREFIX)/bin; \
		cd $(DESTDIR); \
		$(INSTALL) $(SYSCONF_LINK_TARGET)  $(PREFIX)/lib; \
		$(INSTALL) $(SYSCONF_LINK_TARGET2) $(PREFIX)/lib; \
		cd $(PREFIX)/lib; \
		rm -f lib$(TARGET).so lib$(TARGET).so.$(VER_MAJ); \
		ln -s $(SYSCONF_LINK_TARGET_SHARED)  lib$(TARGET).so; \
		ln -s $(SYSCONF_LINK_TARGET_SHARED)  lib$(TARGET).so.$(VER_MAJ); \
		rm -f lib$(TARGET2).so lib$(TARGET2).so.$(VER_MAJ); \
		ln -s $(SYSCONF_LINK_TARGET_SHARED2) lib$(TARGET2).so; \
		ln -s $(SYSCONF_LINK_TARGET_SHARED2) lib$(TARGET2).so.$(VER_MAJ)
                
clean:
	rm -f *.so
	rm -f *.o
	rm -f *~
	rm -f *.a
	rm -f gtk/*.o

$(DESTDIR):
	mkdir $(DESTDIR)
        
$(SYSCONF_LINK_TARGET2): $(OBJECTS2) $(DESTDIR)
	$(SYSCONF_LINK_LIB2)
        
$(SYSCONF_LINK_TARGET): $(OBJECTS) $(DESTDIR)
	$(SYSCONF_LINK_LIB)

dw.o: $(srcdir)/gtk/dw.c
	$(CC) -c $(CCFLAGS) $(INCPATH) -o $@ $(srcdir)/gtk/dw.c

compat.o: $(srcdir)/compat.c
	$(CC) -c $(CCFLAGS) $(INCPATH) -o $@ $(srcdir)/compat.c

ci.o: $(srcdir)/ci.c
	$(CC) -c $(CCFLAGS) $(INCPATH) -o $@ $(srcdir)/ci.c

dwtest.o: $(srcdir)/dwtest.c
	$(CC) -c $(CCFLAGS) $(INCPATH) -o $@ $(srcdir)/dwtest.c
                
ci: ci.o
	$(CC) -o ci ci.o -L$(PREFIX)/lib -ldw -ldwcompat $(LFLAGS)
                
dwtest: dwtest.o
	$(CC) -o dwtest dwtest.o -L$(PREFIX)/lib -ldw -ldwcompat $(LFLAGS)

zip:
	zip dw.zip $(srcdir)/makefile.* $(srcdir)/readme $(srcdir)/*.c $(srcdir)/*.h \
		$(srcdir)/*.def $(srcdir)/install.sh $(srcdir)/*.in $(srcdir)/configure \
		$(srcdir)/ac*.m4 $(srcdir)/gtk/*.c $(srcdir)/win/*.c $(srcdir)/os2/*.c \
		$(srcdir)/platform/*.h
